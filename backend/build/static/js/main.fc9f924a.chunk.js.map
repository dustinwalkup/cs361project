{"version":3,"sources":["components/Header.js","components/Footer.js","components/ATMMarker.js","components/Map.js","components/spinner.gif","components/Loader.js","screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","Brand","href","class","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","ATMMarker","lat","lng","onClick","icon","bitcoinIcon","Map","location","results","zoom","markers","map","e","index","geometry","bootstrapURLKeys","key","process","defaultCenter","coordinates","defaultZoom","defaultProps","Loader","src","spinner","alt","HomeScreen","useState","setResults","loading","setLoading","loaded","searchedLocation","setSearchedLocation","liveBTC","BTCValue","setBTCValue","USDValue","setUSDValue","BTCChange","setBTCChange","USDChange","setUSDChange","useEffect","a","axios","get","data","fetchResults","xs","md","Form","onSubmit","preventDefault","console","log","Group","controlId","Control","type","placeholder","value","onChange","target","Button","toLocaleString","minimumFractionDigits","maximumFractionDigits","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9f924a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <Navbar.Brand href='/'>\r\n            <i class='fab fa-btc'></i>\r\n            TC ATM Locator\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link href='/about'>About</Nav.Link>\r\n              <Nav.Link href='/contact'>Contact</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; BTC ATM Locator\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { Icon } from '@iconify/react'\r\nimport bitcoinIcon from '@iconify-icons/logos/bitcoin'\r\n\r\nconst ATMMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className='atm-marker' onClick={onClick}>\r\n      <Icon icon={bitcoinIcon} className='bitcoin-icon' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ATMMarker\r\n","import GoogleMapReact from 'google-map-react'\r\nimport ATMMarker from './ATMMarker'\r\n\r\nconst Map = ({ location, results, zoom }) => {\r\n  const markers = results.map((e, index) => {\r\n    return (\r\n      <ATMMarker\r\n        key={index}\r\n        lat={e.geometry.location.lat}\r\n        lng={e.geometry.location.lng}\r\n      />\r\n    )\r\n  })\r\n  return (\r\n    <div className='map'>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GKEY }}\r\n        defaultCenter={location.coordinates}\r\n        defaultZoom={zoom}>\r\n        {markers}\r\n      </GoogleMapReact>\r\n    </div>\r\n  )\r\n}\r\n\r\nMap.defaultProps = {\r\n  zoom: 14,\r\n}\r\n\r\nexport default Map\r\n","export default __webpack_public_path__ + \"static/media/spinner.162b79f2.gif\";","import spinner from './spinner.gif'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <img src={spinner} alt='loading' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useState, useEffect } from 'react'\r\nimport Map from '../components/Map'\r\nimport Loader from '../components/Loader'\r\nimport { Col, Row, Form, Button } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [location, setLocation] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: 45.5234515, lng: -122.6762071 },\r\n  })\r\n  const [searchedLocation, setSearchedLocation] = useState('')\r\n  const [liveBTC, setLiveBTC] = useState(55054.7)\r\n  const [BTCValue, setBTCValue] = useState(1)\r\n  const [USDValue, setUSDValue] = useState(liveBTC)\r\n  const [BTCChange, setBTCChange] = useState(false)\r\n  const [USDChange, setUSDChange] = useState(false)\r\n\r\n  // const getUserLocation = async () => {\r\n  //   navigator.geolocation.getCurrentPosition(function (location) {\r\n  //     setUserLocation({\r\n  //       loaded: true,\r\n  //       coordinates: {\r\n  //         lat: location.coords.latitude,\r\n  //         lng: location.coords.longitude,\r\n  //       },\r\n  //     })\r\n  //   })\r\n  // }\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    // if (!('geolocation' in navigator)) {\r\n    //   setUserLocation((state) => ({\r\n    //     ...state,\r\n    //     loaded: true,\r\n    //   }))\r\n    // } else {\r\n    //   await getUserLocation()\r\n    // }\r\n    const fetchResults = async () => {\r\n      const { data } = await axios.get(\r\n        `/api/search/${location.coordinates.lat},${location.coordinates.lng}`\r\n      )\r\n\r\n      setResults(data)\r\n      setLoading(false)\r\n    }\r\n    fetchResults()\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    setBTCValue(USDValue / liveBTC)\r\n    setBTCChange(false)\r\n  }, [BTCChange])\r\n\r\n  useEffect(async () => {\r\n    setUSDValue(BTCValue * liveBTC)\r\n    setUSDChange(false)\r\n  }, [USDChange])\r\n\r\n  const submitHandlerSearch = (e) => {\r\n    e.preventDefault()\r\n    console.log(searchedLocation)\r\n  }\r\n\r\n  const USDChangeHandler = (e) => {\r\n    setUSDValue(e.target.value)\r\n    setBTCChange(true)\r\n  }\r\n  const BTCChangeHandler = (e) => {\r\n    setBTCValue(e.target.value)\r\n    setUSDChange(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className='text-center' xs={12} md={6}>\r\n          <Form onSubmit={submitHandlerSearch}>\r\n            <h3 className='mb-4'>Locate a Bitcoin ATM near you</h3>\r\n            <p className='py-4'>Search location by zip code or city</p>\r\n            <Form.Group controlId='search'>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Location to search for BTC ATMs...'\r\n                value={searchedLocation}\r\n                onChange={(e) =>\r\n                  setSearchedLocation(e.target.value)\r\n                }></Form.Control>\r\n            </Form.Group>\r\n            <Button className='my-5' type='submit' variant='outline-primary'>\r\n              Search Location\r\n            </Button>\r\n          </Form>\r\n          <hr />\r\n          <Form className='mb-5'>\r\n            <h3 className='py-5'>Current conversion rate</h3>\r\n            <Row>\r\n              <Col>\r\n                <p className='pt-3'>Bitcoin</p>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter BTC...'\r\n                  value={BTCValue.toLocaleString('en-us', {\r\n                    minimumFractionDigits: 0,\r\n                    maximumFractionDigits: 5,\r\n                  })}\r\n                  onChange={BTCChangeHandler}></Form.Control>\r\n              </Col>\r\n              <Col>\r\n                <p className='pt-3'>United States Dollar</p>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter USD...'\r\n                  value={USDValue.toLocaleString('en-us', {\r\n                    minimumFractionDigits: 2,\r\n                    maximumFractionDigits: 2,\r\n                  })}\r\n                  onChange={USDChangeHandler}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          {!loading ? (\r\n            <Map results={results} location={location} />\r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main className='py-5'>\n        <Container>\n          <HomeScreen />\n        </Container>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}