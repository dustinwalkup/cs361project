{"version":3,"sources":["components/Header.js","components/Footer.js","components/ATMMarker.js","components/GeoLocateIcon.js","components/LocationInfoBox.js","components/Map.js","components/spinner.gif","components/Loader.js","screens/HomeScreen.js","screens/AboutScreen.js","screens/ContactScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","Brand","href","class","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","ATMMarker","lat","lng","onClick","icon","bitcoinIcon","GeoLocateIcon","LocationInfoBox","info","closeBox","name","address","hours","Map","location","results","zoom","getUserLocation","useState","locationInfo","setLocationInfo","markers","map","e","x","geometry","vicinity","opening_hours","open_now","bootstrapURLKeys","key","process","defaultCenter","coordinates","defaultZoom","defaultProps","Loader","src","spinner","alt","HomeScreen","ATMResults","setATMResults","pageLoading","setPageLoading","mapLoading","setMapLoading","loaded","setLocation","convertLoading","searchedLocation","setSearchedLocation","liveBTC","setLiveBTC","BTCValue","setBTCValue","USDValue","setUSDValue","BTCChange","setBTCChange","USDChange","setUSDChange","a","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","useEffect","state","axios","get","data","fetchLiveBTC","fetchATMResults","xs","md","Form","onSubmit","preventDefault","getCoordinates","Group","controlId","Control","type","placeholder","value","onChange","target","Button","AboutScreen","ContactScreen","messageSent","setMessageSent","setName","email","setEmail","subject","setSubject","message","setMessage","error","setError","submitHandler","post","status","Label","Text","as","rows","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4967311e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <Navbar.Brand href='/'>\r\n            <i class='fab fa-btc'></i>\r\n            TC ATM Locator\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link href='/about'>About</Nav.Link>\r\n              <Nav.Link href='/contact'>Contact</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; BTC ATM Locator\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { Icon } from '@iconify/react'\r\nimport bitcoinIcon from '@iconify-icons/logos/bitcoin'\r\n\r\nconst ATMMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className='atm-marker' onClick={onClick}>\r\n      <Icon icon={bitcoinIcon} className='bitcoin-icon' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ATMMarker\r\n","import React from 'react'\r\n\r\nconst GeoLocateIcon = ({ onClick }) => {\r\n  return (\r\n    <div className='icon-location'>\r\n      <button onClick={onClick} className='fas fa-location-arrow'></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GeoLocateIcon\r\n","import React from 'react'\r\n\r\nconst LocationInfoBox = ({ info, closeBox }) => {\r\n  return (\r\n    <div className='location-info'>\r\n      <button className='close-button' onClick={closeBox}>\r\n        <h5>X</h5>\r\n      </button>\r\n      <h5 className='info-title'>ATM Location Info</h5>\r\n      <ul>\r\n        <li>\r\n          <strong>{info.name}</strong>\r\n        </li>\r\n        <li>{info.address}</li>\r\n        <li>Open Now: {info.hours ? 'Yes' : 'No'}</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationInfoBox\r\n","import { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport ATMMarker from './ATMMarker'\r\nimport GeoLocateIcon from './GeoLocateIcon'\r\nimport LocationInfoBox from './LocationInfoBox'\r\n\r\nconst Map = ({ location, results, zoom, getUserLocation }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null)\r\n\r\n  const closeBox = () => {\r\n    setLocationInfo(null)\r\n  }\r\n\r\n  const markers = results.map((e, x) => {\r\n    return (\r\n      <ATMMarker\r\n        key={x}\r\n        lat={e.geometry.location.lat}\r\n        lng={e.geometry.location.lng}\r\n        onClick={() =>\r\n          setLocationInfo({\r\n            name: e.name,\r\n            address: e.vicinity,\r\n            hours: e.opening_hours.open_now,\r\n          })\r\n        }\r\n      />\r\n    )\r\n  })\r\n  return (\r\n    <div className='map'>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GKEY }}\r\n        defaultCenter={location.coordinates}\r\n        defaultZoom={zoom}>\r\n        {markers}\r\n      </GoogleMapReact>\r\n      <GeoLocateIcon onClick={getUserLocation} />\r\n      {locationInfo && (\r\n        <LocationInfoBox info={locationInfo} closeBox={closeBox} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nMap.defaultProps = {\r\n  zoom: 14,\r\n}\r\n\r\nexport default Map\r\n","export default __webpack_public_path__ + \"static/media/spinner.162b79f2.gif\";","import spinner from './spinner.gif'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <img src={spinner} alt='loading' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useState, useEffect } from 'react'\r\nimport Map from '../components/Map'\r\nimport Loader from '../components/Loader'\r\nimport { Col, Row, Form, Button } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n  const [ATMResults, setATMResults] = useState([])\r\n  const [pageLoading, setPageLoading] = useState(false)\r\n  const [mapLoading, setMapLoading] = useState(false)\r\n  const [location, setLocation] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: 45.5234515, lng: -122.6762071 },\r\n  })\r\n  const [convertLoading, setConvertLoading] = useState(false)\r\n  const [searchedLocation, setSearchedLocation] = useState('')\r\n  const [liveBTC, setLiveBTC] = useState('')\r\n  const [BTCValue, setBTCValue] = useState(1)\r\n  const [USDValue, setUSDValue] = useState('')\r\n  const [BTCChange, setBTCChange] = useState(false)\r\n  const [USDChange, setUSDChange] = useState(false)\r\n\r\n  const getUserLocation = async () => {\r\n    navigator.geolocation.getCurrentPosition(function (location) {\r\n      setLocation({\r\n        loaded: true,\r\n        coordinates: {\r\n          lat: location.coords.latitude,\r\n          lng: location.coords.longitude,\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPageLoading(true)\r\n    if (!('geolocation' in navigator)) {\r\n      setLocation((state) => ({\r\n        ...state,\r\n        loaded: true,\r\n      }))\r\n    } else {\r\n      getUserLocation()\r\n    }\r\n\r\n    const fetchLiveBTC = async () => {\r\n      const { data } = await axios.get('/api')\r\n      setLiveBTC(data)\r\n      setUSDValue(data)\r\n    }\r\n    fetchLiveBTC()\r\n    setPageLoading(false)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setMapLoading(true)\r\n    const fetchATMResults = async () => {\r\n      const { data } = await axios.get(\r\n        `/api/search/${location.coordinates.lat},${location.coordinates.lng}`\r\n      )\r\n\r\n      setATMResults(data)\r\n      setMapLoading(false)\r\n    }\r\n    fetchATMResults()\r\n    setSearchedLocation('')\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    setBTCValue(USDValue / liveBTC)\r\n    setBTCChange(false)\r\n  }, [BTCChange, USDValue])\r\n\r\n  useEffect(() => {\r\n    setUSDValue(BTCValue * liveBTC)\r\n    setUSDChange(false)\r\n  }, [USDChange, BTCValue])\r\n\r\n  const submitHandlerSearch = (e) => {\r\n    e.preventDefault()\r\n    const api_key = process.env.REACT_APP_GKEY\r\n    const getCoordinates = async () => {\r\n      const { data } = await axios.get(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${searchedLocation}&key=${api_key}`\r\n      )\r\n\r\n      setLocation((location) => {\r\n        return {\r\n          ...location,\r\n          coordinates: {\r\n            ...location.coordinates,\r\n            lat: data.results[0].geometry.location.lat,\r\n            lng: data.results[0].geometry.location.lng,\r\n          },\r\n        }\r\n      })\r\n    }\r\n    getCoordinates()\r\n  }\r\n\r\n  const USDChangeHandler = (e) => {\r\n    setUSDValue(e.target.value)\r\n    setBTCChange(true)\r\n  }\r\n  const BTCChangeHandler = (e) => {\r\n    setBTCValue(e.target.value)\r\n    setUSDChange(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <main>\r\n          <Row>\r\n            <Col className='text-center' xs={12} md={6}>\r\n              <Form onSubmit={submitHandlerSearch}>\r\n                <h3 className='mb-4'>Locate a Bitcoin ATM near you</h3>\r\n                <p className='py-4'>\r\n                  Search location by address, city or zip code\r\n                </p>\r\n                <Form.Group controlId='search'>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter location to search for BTC ATMs...'\r\n                    value={searchedLocation}\r\n                    onChange={(e) =>\r\n                      setSearchedLocation(e.target.value)\r\n                    }></Form.Control>\r\n                </Form.Group>\r\n                <Button\r\n                  className='my-5'\r\n                  type='submit'\r\n                  variant='outline-primary'>\r\n                  Search Location\r\n                </Button>\r\n              </Form>\r\n              <hr />\r\n              {convertLoading ? (\r\n                <Loader />\r\n              ) : (\r\n                <Form className='mb-5'>\r\n                  <h3 className='py-5'>Current conversion rate</h3>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className='pt-3'>Bitcoin</p>\r\n                      <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter BTC...'\r\n                        value={BTCValue}\r\n                        onChange={BTCChangeHandler}></Form.Control>\r\n                    </Col>\r\n                    <Col>\r\n                      <p className='pt-3'>United States Dollar</p>\r\n                      <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter USD...'\r\n                        value={USDValue}\r\n                        onChange={USDChangeHandler}></Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              {!mapLoading ? (\r\n                <Map\r\n                  results={ATMResults}\r\n                  location={location}\r\n                  getUserLocation={getUserLocation}\r\n                />\r\n              ) : (\r\n                <Loader />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </main>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\n\r\nconst AboutScreen = () => {\r\n  return (\r\n    <>\r\n      <h3>About us</h3>\r\n      <p className='py-2'>\r\n        BTC ATM Locator is a project that was designed and developed for CS 361\r\n        Software Engineering I at Oregon State in the Spring of 2021{' '}\r\n      </p>\r\n      <p className='py-2'>\r\n        This project was part of a microservices project with 4 other students\r\n        from the class. It consumes the BTC to USD conversion rate as an API\r\n        from another service{' '}\r\n      </p>\r\n      <p className='py-2'>\r\n        This project also serves as a Wikipedia page PDF scraper{' '}\r\n      </p>\r\n      <h4>API Guide</h4>\r\n      <p className='pt-2'>\r\n        This API will scrape any Wikipedia page and return a list of PDF strings\r\n        from the citation section\r\n      </p>\r\n      <p className='pt-2'>\r\n        https://btcatmlocator.herokuapp.com/api/scrape/subject\r\n      </p>\r\n      <p className='pt-2'>\r\n        Replace 'subject' with the page you would like to scrape. The URL is\r\n        case sensitive, input the subject exactly how it is written in the\r\n        Wikipedia URL.\r\n      </p>\r\n      Example:\r\n      <p className='pt-2'>\r\n        https://en.wikipedia.org/wiki/World_War_II\r\n        <br />\r\n        https://btcatmlocator.herokuapp.com/api/scrape/World_War_II\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AboutScreen\r\n","import { Button, Container, Form } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst ContactScreen = () => {\r\n  const [messageSent, setMessageSent] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [subject, setSubject] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [error, setError] = useState(false)\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    const res = await axios.post('api/contact', {\r\n      name,\r\n      email,\r\n      subject,\r\n      message,\r\n    })\r\n    if (res.status === 200) {\r\n      setMessageSent(true)\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <h3>Error: Message not sent</h3>}\r\n      {messageSent ? (\r\n        <h3>Your message has been sent!</h3>\r\n      ) : (\r\n        <div>\r\n          <h3>Contact Us</h3>\r\n          <Container>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted'></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted'></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Subject</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter subject'\r\n                  value={subject}\r\n                  onChange={(e) => setSubject(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted'></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Message</Form.Label>\r\n                <Form.Control\r\n                  as='textarea'\r\n                  rows={4}\r\n                  placeholder='Enter Message'\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <Form.Text className='text-muted'></Form.Text>\r\n              </Form.Group>\r\n              <Button\r\n                onClick={submitHandler}\r\n                variant='outline-primary'\r\n                type='submit'>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactScreen\r\n","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport AboutScreen from './screens/AboutScreen'\nimport ContactScreen from './screens/ContactScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-5'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/about' component={AboutScreen} exact />\n          <Route path='/contact' component={ContactScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}